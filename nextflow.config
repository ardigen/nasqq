includeConfig 'conf/base.config'
includeConfig 'conf/modules.config'
includeConfig 'conf/profiles.config'
includeConfig 'conf/reports.config'

manifest {
    name            = 'NASQQ'
    author          = '≈Åukasz Pruss'
    description     = 'Pipeline for automated translation of raw 1D 1H NMR spectra signals into qualitative and quantitative data for disease analysis'
    mainScript      = 'main.nf'
    nextflowVersion = '23.10.1'
    version         = '1.0.0'
}

params {
    // Max resource for processes
    max_cpus = 16
    max_memory = '30.GB'
    max_time = '10.h'
    
}

// Function to ensure that resource requirements don't go beyond a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
