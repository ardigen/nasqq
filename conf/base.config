process {
    // Error handling
    errorStrategy = { task.attempt <= params.maxRetries ? 'retry' : params.errorStrategy }
    maxRetries = { task.attempt <= params.maxRetries ? params.maxRetries : 0 }
    maxErrors = '2'

    cache = true

    // Default resource requirements
    cpus = { 4 * task.attempt }
    memory = { 4.GB * task.attempt }
    time = { 10.h * task.attempt }

    withLabel: process_low {
        cpus = { check_max( 3 * task.attempt, 'cpus' ) }
        memory = { check_max( 4.GB * task.attempt, 'memory' ) }
        time = { check_max( 6.h * task.attempt, 'time' ) }
    }
    withLabel: process_medium {
        cpus = { check_max( 5 * task.attempt, 'cpus' ) }
        memory = { check_max( 8.GB * task.attempt, 'memory' ) }
        time = { check_max( 8.h * task.attempt, 'time' ) }
    }
    withLabel: process_high {
        cpus = { check_max( 16 * task.attempt, 'cpus' ) }
        memory = { check_max( 30.GB * task.attempt, 'memory' ) }
        time = { check_max( 10.h * task.attempt, 'time' ) }
    }

    withName: LOAD_FIDS {        
        container = "hnmr-workflow:r_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/spectral_preprocessing/1_load_fids" },
            mode: "copy",
            pattern: "results/tables/*"
        ]
    }

    withName: RAW_FIDS_VISUALIZATION {
        container = "hnmr-workflow:r_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/spectral_preprocessing/2_raw_plots" },
            mode: "copy",
            pattern: "results/*"
        ]
    }

    withName: GROUP_DELAY_CORRECTION {
        container = "hnmr-workflow:r_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/spectral_preprocessing/3_group_delay_corection" },
            mode: "copy",
            pattern: "results/*"
        ]
    }

    withName: SOLVENT_SUPPRESSION {
        container = "hnmr-workflow:r_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/spectral_preprocessing/4_solvent_suppression" },
            mode: "copy",
            pattern: "results/*"
        ]
    }

    withName: APODIZATION {
        container = "hnmr-workflow:r_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/spectral_preprocessing/5_apodization" },
            mode: "copy",
            pattern: "results/*"
        ]
    }

    withName: ZERO_FILLING {
        container = "hnmr-workflow:r_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/spectral_preprocessing/6_zero_filling" },
            mode: "copy",
            pattern: "results/*"
        ]
    }

    withName: FOURIER_TRANSFORMATION {
        container = "hnmr-workflow:r_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/spectral_preprocessing/7_fourier_transformation" },
            mode: "copy",
            pattern: "results/*"
        ]
    }

    withName: ZERO_ORDER_PHASE_CORRECTION {
        container = "hnmr-workflow:r_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/spectral_preprocessing/8_zero_order_phase_correction" },
            mode: "copy",
            pattern: "results/*"
        ]
    }

    withName: INTERNAL_REFERENCING {
        container = "hnmr-workflow:r_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/spectral_preprocessing/9_internal_referencing" },
            mode: "copy",
            pattern: "results/*"
        ]
    }

    withName: BASELINE_CORRECTION {
        container = "hnmr-workflow:r_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/spectral_preprocessing/10_baseline_correction" },
            mode: "copy",
            pattern: "results/*"
        ]
    }

    withName: NEGATIVE_VALUES_ZEROING {
        container = "hnmr-workflow:r_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/spectral_preprocessing/11_negative_values_zeroing" },
            mode: "copy",
            pattern: "results/*"
        ]
    }

    withName: WARPING {
        container = "hnmr-workflow:r_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/spectral_preprocessing/11.5_warping" },
            mode: "copy",
            pattern: "results/*"
        ]
    }

    withName: WINDOW_SELECTION {
        container = "hnmr-workflow:r_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/spectral_preprocessing/12_window_selection" },
            mode: "copy",
            pattern: "results/*"
        ]
    }

    withName: BUCKETING {
        container = "hnmr-workflow:r_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/spectral_preprocessing/12.5_bucketing" },
            mode: "copy",
            pattern: "results/*"
        ]
    }

    withName: NORMALIZATION {
        container = "hnmr-workflow:r_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/spectral_preprocessing/13_normalization" },
            mode: "copy",
            pattern: "results"
        ]
    }

    withName: METABOLITES_QUANTIFICATION {
        container = "hnmr-workflow:r_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/metabolites_quantification/" },
            mode: "copy"
        ]
    }

    withName: ADD_METADATA {
        container = "hnmr-workflow:python_utils"
        publishDir = [
            path: { "${params.outDir}/datasets/with_metadata" },
            mode: "copy"
        ]
    }

    withName: COMBINE_DATASET_BATCHES {
        container = "hnmr-workflow:python_utils"
        publishDir = [
            path: { "${params.outDir}/datasets/with_batch" },
            mode: "copy"
        ]
    }

    withName: FEATURES_PROCESSING {
        container = "hnmr-workflow:python_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/data_analysis/features_preprocessing" },
            mode: "copy",
            pattern: "results"
        ]
    }

    withName: EXPLORATORY_DATA_ANALYSIS {
        container = "hnmr-workflow:python_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/data_analysis/exploratory_data_analysis" },
            mode: "copy",
            pattern: "results"
        ]
    }

    withName: UNIVARIATE_ANALYSIS {
        container = "hnmr-workflow:python_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/data_analysis/univariate_analysis" },
            mode: "copy"
        ]
    }

    withName: MULTIVARIATE_ANALYSIS {
        container = "hnmr-workflow:python_utils"
        publishDir = [
            path: { "${params.outDir}/${project}/data_analysis/multivariate_analysis" },
            mode: "copy"
        ]
    }
}

